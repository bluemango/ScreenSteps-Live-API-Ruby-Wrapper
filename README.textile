h1. ScreenStepsLive API Ruby Wrapper

h2. Usage

This library users ActiveResource to interact with the ScreenSteps Live API.

To setup do the following:

<pre>
  require 'screenstepslive_api'
  ScreenStepsLiveAPI.account = 'youraccount'
  ScreenStepsLiveAPI.user = 'username'
  ScreenStepsLiveAPI.password = 'your_password'
</pre>

All manuals, buckets and lessons are retrieved via Spaces. You can pass in the space id.

<pre>space = ScreenStepsLiveAPI::Space.find(:first)</pre>
 
OR if your permalink is "mypermalink"

<pre>space = ScreenStepsLiveAPI::Space.find("mypermalink")</pre>

<code>space.assets</code> gives you all of the assets (Dividers, Manuals, Buckets) for a space

<pre>asset = space.assets.first</pre>

<code>asset.asset_type</code> returns the asset type. 

If it is a manual then we can call:

<pre>manual = space.manual(asset.id)</pre>

Then we can get the first lesson like so:

<pre>
  lesson_id = manual.chapters.first.lessons.first.id
  manual.lesson(lesson_id)
</pre>

Same method works for buckets.

h3. Searching

To search just find the space, bucket or manual you want to search and do the following:

<pre>
  space.search("search string")
  manual.search("search string")
  bucket.search("search string")
</pre>

h3. Getting Tagged Lessons

You can do the same for tags

<pre>
  space.lessons_for_tag("Tag name")
  manual.lessons_for_tag("Tag name")
  bucket.lessons_for_tag("Tag name")
</pre>

h3. Displaying a Lesson

To display the contents of a lesson. First find the space and manual/bucket the lesson is in.

<pre>
  space = ScreenStepsLiveAPI::Space.find('space_id')
  bucket = space.bucket(space.assets.first.id)
  lesson = bucket.lesson(bucket.lessons.first.id)
</pre>

Now you can iterate over the lesson to display the contents. HAML output might look like this:

<pre>
  %h1= lesson.title
  .lesson_description= lesson.description
  - lesson.steps.each do |step|
    %h2= step.title
    .lesson_step
      = step.instructions
      - if step.media
        .image
          = image_tag(step.media.url, :width => step.media.width, :height => step.media.height)

</pre>